(()=>{"use strict";const t=window.wp.blocks,o=window.wp.i18n,i=["inserter"],e=[{blockName:"core/paragraph",variations:[{name:"podcast-recording-date",title:(0,o.__)("Episode Recording Date","gt-podcast-bb"),description:(0,o.__)("Display the podcast episode recording date","gt-podcast-bb"),icon:"calendar-alt",bindingKey:"recording_date",bindingAttribute:"content"},{name:"podcast-description",title:(0,o.__)("Podcast Description","gt-podcast-bb"),description:(0,o.__)("Display the main podcast description","gt-podcast-bb"),icon:"text",bindingKey:"podcast_description",bindingAttribute:"content"}]},{blockName:"core/button",variations:[{name:"episode-download-button",title:(0,o.__)("Episode Download Button","gt-podcast-bb"),description:(0,o.__)("Button that links to the episode audio file","gt-podcast-bb"),icon:"download",bindingKey:"download_link",bindingAttribute:"url",additionalAttributes:{text:(0,o.__)("Download Episode","gt-podcast-bb")}}]},{blockName:"core/image",variations:[{name:"podcast-episode-cover",title:(0,o.__)("Episode Cover Image","gt-podcast-bb"),description:(0,o.__)("Display the episode cover image","gt-podcast-bb"),icon:"format-image",bindingKey:"cover_image",bindingAttribute:"url",additionalAttributes:{alt:(0,o.__)("Episode Cover","gt-podcast-bb")}},{name:"podcast-logo-image",title:(0,o.__)("Podcast Logo","gt-podcast-bb"),description:(0,o.__)("Display the main podcast logo/image","gt-podcast-bb"),icon:"admin-media",bindingKey:"podcast_image",bindingAttribute:"url",additionalAttributes:{alt:(0,o.__)("Podcast Logo","gt-podcast-bb")}}]},{blockName:"core/audio",variations:[{name:"episode-audio-player",title:(0,o.__)("Episode Audio Player","gt-podcast-bb"),description:(0,o.__)("Audio player for the podcast episode","gt-podcast-bb"),icon:"controls-volumeon",bindingKey:"download_link",bindingAttribute:"src"}]}],a=t=>{const o=(i=t.bindingKey,e=t.bindingAttribute,{metadata:{bindings:{[e]:{source:"gt-podcast-bb/episode-data",args:{key:i}}}}});var i,e;return{...t.additionalAttributes||{},...o}};"function"==typeof t.registerBlockVariation?e.forEach(o=>{const{blockName:e,variations:n}=o;Array.isArray(n)?n.forEach(o=>{try{((o,e)=>{const n={name:e.name,title:e.title,description:e.description,icon:e.icon,category:"media",attributes:a(e),scope:i};(0,t.registerBlockVariation)(o,n)})(e,o)}catch(t){console.error(`Error registering variation ${o.name}:`,t)}}):console.warn(`No variations found for block: ${e}`)}):console.error("WordPress blocks API not available")})();